pub fn parse(source: String) -> Vec<Token> {
    source
        .chars()
        .filter_map(|c| match c {
            '+' => Some(Token::Plus(None)),
            '-' => Some(Token::Minus(None)),
            '>' => Some(Token::Right),
            '<' => Some(Token::Left),
            ',' => Some(Token::Comma(SingleArg::Zero)),
            '.' => Some(Token::Dot(SingleArg::Zero)),
            '[' => Some(Token::Open(Vec::new())),
            ']' => Some(Token::Close(Vec::new())),
            ':' => Some(Token::DebugColon),
            _ => None,
        })
        .collect()
}

pub fn translate(parsed: Vec<Token>) -> String {
    String::from(">>>>>") //Have to prepend with this because translations expect the pointer to be at W after first D cells (Tape starts W D D D D W ... and poijnter needs to be at 2nd W), this is index 5
        + &(parsed
            .iter()
            .map(|t| match t {
                Token::Plus(_) => TRANSLATION_ADD_FULL,
                Token::Minus(_) => TRANSLATION_SUB_FULL,
                Token::Right => TRANSLATION_RIGHT,
                Token::Left => TRANSLATION_LEFT,
                Token::Comma(_) => "<,>",
                Token::Dot(_) => "<.>",
                Token::Open(_) => TRANSLATION_OPEN_FULL,
                Token::Close(_) => TRANSLATION_CLOSE_FULL,
                Token::DebugColon => ":"
            })
            .collect::<String>())
}

pub enum Token {
    Plus(Option<SingleArg>),
    Minus(Option<SingleArg>),
    Right,
    Left,
    Comma(SingleArg),
    Dot(SingleArg),
    Open(Vec<SingleArg>),
    Close(Vec<SingleArg>),
    DebugColon,
}

pub enum SingleArg {
    Zero,
    One,
    Two,
    Three,
}

// Unless otherwise annotated, the following hardcoded conversions are generated using the following python scripts, the algorithms used are explained in the python source code: https://github.com/anarchie347/brain-translation-generation-scripts

//integers at the end of the constant names refer to the column, so ADD_1 means +1 to the (256^1) column, i.e. add 256

const TRANSLATION_ADD_FULL: &str = "<+<+<+<+<[-]+>>>>>[-]>>>>>[-]<<<<<<[>+>>>>>+<<<<<<-]>>>>>>[<<<<<<+>>>>>>-]<<<<<[<<-<-<-<[-]>>>>>[-]][-]>>>>>[-]<<<<<<<[>>+>>>>>+<<<<<<<-]>>>>>>>[<<<<<<<+>>>>>>>-]<<<<<[<<<<<[>>-<-<[-]]>>>>>[-]][-]>>>>>[-]<<<<<<<<[>>>+>>>>>+<<<<<<<<-]>>>>>>>>[<<<<<<<<+>>>>>>>>-]<<<<<[<<<<<[>-<[-]]>>>>>[-]]";
const TRANSLATION_ADD_0: &str = TRANSLATION_ADD_FULL;
const TRANSLATION_ADD_1: &str = "<<+<+<+<[-]+>>>>>[-]>>>>>[-]<<<<<<<[>>+>>>>>+<<<<<<<-]>>>>>>>[<<<<<<<+>>>>>>>-]<<<<<[<<<-<-<[-]>>>>>[-]][-]>>>>>[-]<<<<<<<<[>>>+>>>>>+<<<<<<<<-]>>>>>>>>[<<<<<<<<+>>>>>>>>-]<<<<<[<<<<<[>-<[-]]>>>>>[-]]";
const TRANSLATION_ADD_2: &str = "<<<+<+>>>>[-]>>>>>[-]<<<<<<<<[>>>+>>>>>+<<<<<<<<-]>>>>>>>>[<<<<<<<<+>>>>>>>>-]<<<<<[<<<<->>>>]";
const TRANSLATION_ADD_3: &str = "<<<<+>>>>"; // simple, no carry logic needed. Script not used

//No carry, just add to the individual cell
const TRANSLATION_ADD_0_NOC: &str = "<+>";
const TRANSLATION_ADD_1_NOC: &str = "<<+>>";
const TRANSLATION_ADD_2_NOC: &str = "<<<+>>>";
const TRANSLATION_ADD_3_NOC: &str = "<<<<+>>>>"; //same as regular add3


const TRANSLATION_SUB_FULL: &str = "<<<<<[-]+>>>>>[-]>>>>>[-]<<<<<<[>+>>>>>+<<<<<<-]>>>>>>[<<<<<<+>>>>>>-]<<<<<[<<+<+<+<[-]>>>>>[-]][-]>>>>>[-]<<<<<<<[>>+>>>>>+<<<<<<<-]>>>>>>>[<<<<<<<+>>>>>>>-]<<<<<[<<<<<[>>+<+<[-]]>>>>>[-]][-]>>>>>[-]<<<<<<<<[>>>+>>>>>+<<<<<<<<-]>>>>>>>>[<<<<<<<<+>>>>>>>>-]<<<<<[<<<<<[>+<[-]]>>>>>[-]]<-<-<-<->>>>";
const TRANSLATION_SUB_0: &str = TRANSLATION_SUB_FULL;
const TRANSLATION_SUB_1: &str = "<<<<<[-]>>>>>[-]>>>>>[-]<<<<<<<[>>+>>>>>+<<<<<<<-]>>>>>>>[<<<<<<<+>>>>>>>-]<<<<<[<<<+<+<[-]>>>>>[-]][-]>>>>>[-]<<<<<<<<[>>>+>>>>>+<<<<<<<<-]>>>>>>>>[<<<<<<<<+>>>>>>>>-]<<<<<[<<<<<[>+<[-]]>>>>>[-]]<<-<-<->>>>";
const TRANSLATION_SUB_2: &str = "[-]>>>>>[-]<<<<<<<<[>>>+>>>>>+<<<<<<<<-]>>>>>>>>[<<<<<<<<+>>>>>>>>-]<<<<<[<<<<+>>>>[-]]<<<-<-";
const TRANSLATION_SUB_3: &str = "<<<<->>>>"; // simple, no carry logic needed. Script not used

//No carry, just sub from the individual cell
const TRANSLATION_SUB_0_NOC: &str = "<->";
const TRANSLATION_SUB_1_NOC: &str = "<<->>";
const TRANSLATION_SUB_2_NOC: &str = "<<<->>>";
const TRANSLATION_SUB_3_NOC: &str = "<<<<->>>>"; //same as regular sub3

const TRANSLATION_RIGHT: &str = ">>>>>"; //cells are grouped in blocks of 5

const TRANSLATION_LEFT: &str = "<<<<<"; //cells are grouped in blocks of 5

const TRANSLATION_OPEN_FULL: &str = "<<<<<[-]>>>>>[-]>>>>>[-]<<<<<<[>+>>>>>+<<<<<<-]>>>>>>[<<<<<<+>>>>>>-]<<<<<[<<<<<+>>>>>[-]][-]>>>>>[-]<<<<<<<[>>+>>>>>+<<<<<<<-]>>>>>>>[<<<<<<<+>>>>>>>-]<<<<<[<<<<<+>>>>>[-]][-]>>>>>[-]<<<<<<<<[>>>+>>>>>+<<<<<<<<-]>>>>>>>>[<<<<<<<<+>>>>>>>>-]<<<<<[<<<<<+>>>>>[-]][-]>>>>>[-]<<<<<<<<<[>>>>+>>>>>+<<<<<<<<<-]>>>>>>>>>[<<<<<<<<<+>>>>>>>>>-]<<<<<[<<<<<+>>>>>[-]]<<<<<[>>>>>";

const TRANSLATION_CLOSE_FULL: &str = "<<<<<[-]>>>>>[-]>>>>>[-]<<<<<<[>+>>>>>+<<<<<<-]>>>>>>[<<<<<<+>>>>>>-]<<<<<[<<<<<+>>>>>[-]][-]>>>>>[-]<<<<<<<[>>+>>>>>+<<<<<<<-]>>>>>>>[<<<<<<<+>>>>>>>-]<<<<<[<<<<<+>>>>>[-]][-]>>>>>[-]<<<<<<<<[>>>+>>>>>+<<<<<<<<-]>>>>>>>>[<<<<<<<<+>>>>>>>>-]<<<<<[<<<<<+>>>>>[-]][-]>>>>>[-]<<<<<<<<<[>>>>+>>>>>+<<<<<<<<<-]>>>>>>>>>[<<<<<<<<<+>>>>>>>>>-]<<<<<[<<<<<+>>>>>[-]]<<<<<]>>>>>";

//all possible cases of cells to include for brackets
const TRANSLATION_OPEN_3210: &str = TRANSLATION_OPEN_FULL;
const TRANSLATION_OPEN_321: &str = "<<<<<[-]>>>>>[-]>>>>>[-]<<<<<<<[>>+>>>>>+<<<<<<<-]>>>>>>>[<<<<<<<+>>>>>>>-]<<<<<[<<<<<+>>>>>[-]]<<<<<[>>>>>";
const TRANSLATION_OPEN_320: &str = "<<<<<[-]>>>>>[-]>>>>>[-]<<<<<<<[>>+>>>>>+<<<<<<<-]>>>>>>>[<<<<<<<+>>>>>>>-]<<<<<[<<<<<+>>>>>[-]][-]>>>>>[-]<<<<<<<<[>>>+>>>>>+<<<<<<<<-]>>>>>>>>[<<<<<<<<+>>>>>>>>-]<<<<<[<<<<<+>>>>>[-]][-]>>>>>[-]<<<<<<<<<[>>>>+>>>>>+<<<<<<<<<-]>>>>>>>>>[<<<<<<<<<+>>>>>>>>>-]<<<<<[<<<<<+>>>>>[-]]<<<<<[>>>>>";
const TRANSLATION_OPEN_32: &str = "<<<<<[-]>>>>>[-]>>>>>[-]<<<<<<<<[>>>+>>>>>+<<<<<<<<-]>>>>>>>>[<<<<<<<<+>>>>>>>>-]<<<<<[<<<<<+>>>>>[-]][-]>>>>>[-]<<<<<<<<<[>>>>+>>>>>+<<<<<<<<<-]>>>>>>>>>[<<<<<<<<<+>>>>>>>>>-]<<<<<[<<<<<+>>>>>[-]]<<<<<[>>>>>";
const TRANSLATION_OPEN_310: &str = "<<<<<[-]>>>>>[-]>>>>>[-]<<<<<<[>+>>>>>+<<<<<<-]>>>>>>[<<<<<<+>>>>>>-]<<<<<[<<<<<+>>>>>[-]][-]>>>>>[-]<<<<<<<[>>+>>>>>+<<<<<<<-]>>>>>>>[<<<<<<<+>>>>>>>-]<<<<<[<<<<<+>>>>>[-]][-]>>>>>[-]<<<<<<<<<[>>>>+>>>>>+<<<<<<<<<-]>>>>>>>>>[<<<<<<<<<+>>>>>>>>>-]<<<<<[<<<<<+>>>>>[-]]<<<<<[>>>>>";
const TRANSLATION_OPEN_31: &str = "<<<<<[-]>>>>>[-]>>>>>[-]<<<<<<<[>>+>>>>>+<<<<<<<-]>>>>>>>[<<<<<<<+>>>>>>>-]<<<<<[<<<<<+>>>>>[-]][-]>>>>>[-]<<<<<<<<<[>>>>+>>>>>+<<<<<<<<<-]>>>>>>>>>[<<<<<<<<<+>>>>>>>>>-]<<<<<[<<<<<+>>>>>[-]]<<<<<[>>>>>";
const TRANSLATION_OPEN_30: &str = "<<<<<[-]>>>>>[-]>>>>>[-]<<<<<<[>+>>>>>+<<<<<<-]>>>>>>[<<<<<<+>>>>>>-]<<<<<[<<<<<+>>>>>[-]][-]>>>>>[-]<<<<<<<<<[>>>>+>>>>>+<<<<<<<<<-]>>>>>>>>>[<<<<<<<<<+>>>>>>>>>-]<<<<<[<<<<<+>>>>>[-]]<<<<<[>>>>>";
const TRANSLATION_OPEN_3: &str = "<<<<<[-]>>>>>[-]>>>>>[-]<<<<<<<<<[>>>>+>>>>>+<<<<<<<<<-]>>>>>>>>>[<<<<<<<<<+>>>>>>>>>-]<<<<<[<<<<<+>>>>>[-]]<<<<<[>>>>>";
const TRANSLATION_OPEN_210: &str = "<<<<<[-]>>>>>[-]>>>>>[-]<<<<<<[>+>>>>>+<<<<<<-]>>>>>>[<<<<<<+>>>>>>-]<<<<<[<<<<<+>>>>>[-]][-]>>>>>[-]<<<<<<<[>>+>>>>>+<<<<<<<-]>>>>>>>[<<<<<<<+>>>>>>>-]<<<<<[<<<<<+>>>>>[-]][-]>>>>>[-]<<<<<<<<[>>>+>>>>>+<<<<<<<<-]>>>>>>>>[<<<<<<<<+>>>>>>>>-]<<<<<[<<<<<+>>>>>[-]]<<<<<[>>>>>";
const TRANSLATION_OPEN_21: &str = "<<<<<[-]>>>>>[-]>>>>>[-]<<<<<<<[>>+>>>>>+<<<<<<<-]>>>>>>>[<<<<<<<+>>>>>>>-]<<<<<[<<<<<+>>>>>[-]][-]>>>>>[-]<<<<<<<<[>>>+>>>>>+<<<<<<<<-]>>>>>>>>[<<<<<<<<+>>>>>>>>-]<<<<<[<<<<<+>>>>>[-]]<<<<<[>>>>>";
const TRANSLATION_OPEN_20: &str = "<<<<<[-]>>>>>[-]>>>>>[-]<<<<<<[>+>>>>>+<<<<<<-]>>>>>>[<<<<<<+>>>>>>-]<<<<<[<<<<<+>>>>>[-]][-]>>>>>[-]<<<<<<<<[>>>+>>>>>+<<<<<<<<-]>>>>>>>>[<<<<<<<<+>>>>>>>>-]<<<<<[<<<<<+>>>>>[-]]<<<<<[>>>>>";
const TRANSLATION_OPEN_2: &str = "<<<<<[-]>>>>>[-]>>>>>[-]<<<<<<<<[>>>+>>>>>+<<<<<<<<-]>>>>>>>>[<<<<<<<<+>>>>>>>>-]<<<<<[<<<<<+>>>>>[-]]<<<<<[>>>>>";
const TRANSLATION_OPEN_10: &str = "<<<<<[-]>>>>>[-]>>>>>[-]<<<<<<[>+>>>>>+<<<<<<-]>>>>>>[<<<<<<+>>>>>>-]<<<<<[<<<<<+>>>>>[-]][-]>>>>>[-]<<<<<<<[>>+>>>>>+<<<<<<<-]>>>>>>>[<<<<<<<+>>>>>>>-]<<<<<[<<<<<+>>>>>[-]]<<<<<[>>>>>";
const TRANSLATION_OPEN_1: &str = "<<<<<[-]>>>>>[-]>>>>>[-]<<<<<<<[>>+>>>>>+<<<<<<<-]>>>>>>>[<<<<<<<+>>>>>>>-]<<<<<[<<<<<+>>>>>[-]]<<<<<[>>>>>";
const TRANSLATION_OPEN_0: &str = "<<<<<[-]>>>>>[-]>>>>>[-]<<<<<<[>+>>>>>+<<<<<<-]>>>>>>[<<<<<<+>>>>>>-]<<<<<[<<<<<+>>>>>[-]]<<<<<[>>>>>";

const TRANSLATION_CLOSE_3210: &str = TRANSLATION_CLOSE_FULL;
const TRANSLATION_CLOSE_321: &str = "<<<<<[-]>>>>>[-]>>>>>[-]<<<<<<<[>>+>>>>>+<<<<<<<-]>>>>>>>[<<<<<<<+>>>>>>>-]<<<<<[<<<<<+>>>>>[-]][-]>>>>>[-]<<<<<<<<[>>>+>>>>>+<<<<<<<<-]>>>>>>>>[<<<<<<<<+>>>>>>>>-]<<<<<[<<<<<+>>>>>[-]][-]>>>>>[-]<<<<<<<<<[>>>>+>>>>>+<<<<<<<<<-]>>>>>>>>>[<<<<<<<<<+>>>>>>>>>-]<<<<<[<<<<<+>>>>>[-]]<<<<<]>>>>>";
const TRANSLATION_CLOSE_320: &str = "<<<<<[-]>>>>>[-]>>>>>[-]<<<<<<[>+>>>>>+<<<<<<-]>>>>>>[<<<<<<+>>>>>>-]<<<<<[<<<<<+>>>>>[-]][-]>>>>>[-]<<<<<<<<[>>>+>>>>>+<<<<<<<<-]>>>>>>>>[<<<<<<<<+>>>>>>>>-]<<<<<[<<<<<+>>>>>[-]][-]>>>>>[-]<<<<<<<<<[>>>>+>>>>>+<<<<<<<<<-]>>>>>>>>>[<<<<<<<<<+>>>>>>>>>-]<<<<<[<<<<<+>>>>>[-]]<<<<<]>>>>>";
const TRANSLATION_CLOSE_32: &str = "<<<<<[-]>>>>>[-]>>>>>[-]<<<<<<<<[>>>+>>>>>+<<<<<<<<-]>>>>>>>>[<<<<<<<<+>>>>>>>>-]<<<<<[<<<<<+>>>>>[-]][-]>>>>>[-]<<<<<<<<<[>>>>+>>>>>+<<<<<<<<<-]>>>>>>>>>[<<<<<<<<<+>>>>>>>>>-]<<<<<[<<<<<+>>>>>[-]]<<<<<]>>>>>";
const TRANSLATION_CLOSE_310: &str = "<<<<<[-]>>>>>[-]>>>>>[-]<<<<<<[>+>>>>>+<<<<<<-]>>>>>>[<<<<<<+>>>>>>-]<<<<<[<<<<<+>>>>>[-]][-]>>>>>[-]<<<<<<<[>>+>>>>>+<<<<<<<-]>>>>>>>[<<<<<<<+>>>>>>>-]<<<<<[<<<<<+>>>>>[-]][-]>>>>>[-]<<<<<<<<<[>>>>+>>>>>+<<<<<<<<<-]>>>>>>>>>[<<<<<<<<<+>>>>>>>>>-]<<<<<[<<<<<+>>>>>[-]]<<<<<]>>>>>";
const TRANSLATION_CLOSE_31: &str = "<<<<<[-]>>>>>[-]>>>>>[-]<<<<<<<[>>+>>>>>+<<<<<<<-]>>>>>>>[<<<<<<<+>>>>>>>-]<<<<<[<<<<<+>>>>>[-]][-]>>>>>[-]<<<<<<<<<[>>>>+>>>>>+<<<<<<<<<-]>>>>>>>>>[<<<<<<<<<+>>>>>>>>>-]<<<<<[<<<<<+>>>>>[-]]<<<<<]>>>>>";
const TRANSLATION_CLOSE_30: &str = "<<<<<[-]>>>>>[-]>>>>>[-]<<<<<<[>+>>>>>+<<<<<<-]>>>>>>[<<<<<<+>>>>>>-]<<<<<[<<<<<+>>>>>[-]][-]>>>>>[-]<<<<<<<<<[>>>>+>>>>>+<<<<<<<<<-]>>>>>>>>>[<<<<<<<<<+>>>>>>>>>-]<<<<<[<<<<<+>>>>>[-]]<<<<<]>>>>>";
const TRANSLATION_CLOSE_3: &str = "<<<<<[-]>>>>>[-]>>>>>[-]<<<<<<<<<[>>>>+>>>>>+<<<<<<<<<-]>>>>>>>>>[<<<<<<<<<+>>>>>>>>>-]<<<<<[<<<<<+>>>>>[-]]<<<<<]>>>>>";
const TRANSLATION_CLOSE_210: &str = "<<<<<[-]>>>>>[-]>>>>>[-]<<<<<<[>+>>>>>+<<<<<<-]>>>>>>[<<<<<<+>>>>>>-]<<<<<[<<<<<+>>>>>[-]][-]>>>>>[-]<<<<<<<[>>+>>>>>+<<<<<<<-]>>>>>>>[<<<<<<<+>>>>>>>-]<<<<<[<<<<<+>>>>>[-]][-]>>>>>[-]<<<<<<<<[>>>+>>>>>+<<<<<<<<-]>>>>>>>>[<<<<<<<<+>>>>>>>>-]<<<<<[<<<<<+>>>>>[-]]<<<<<]>>>>>";
const TRANSLATION_CLOSE_21: &str = "<<<<<[-]>>>>>[-]>>>>>[-]<<<<<<<[>>+>>>>>+<<<<<<<-]>>>>>>>[<<<<<<<+>>>>>>>-]<<<<<[<<<<<+>>>>>[-]][-]>>>>>[-]<<<<<<<<[>>>+>>>>>+<<<<<<<<-]>>>>>>>>[<<<<<<<<+>>>>>>>>-]<<<<<[<<<<<+>>>>>[-]]<<<<<]>>>>>";
const TRANSLATION_CLOSE_20: &str = "<<<<<[-]>>>>>[-]>>>>>[-]<<<<<<[>+>>>>>+<<<<<<-]>>>>>>[<<<<<<+>>>>>>-]<<<<<[<<<<<+>>>>>[-]][-]>>>>>[-]<<<<<<<<[>>>+>>>>>+<<<<<<<<-]>>>>>>>>[<<<<<<<<+>>>>>>>>-]<<<<<[<<<<<+>>>>>[-]]<<<<<]>>>>>";
const TRANSLATION_CLOSE_2: &str = "<<<<<[-]>>>>>[-]>>>>>[-]<<<<<<<<[>>>+>>>>>+<<<<<<<<-]>>>>>>>>[<<<<<<<<+>>>>>>>>-]<<<<<[<<<<<+>>>>>[-]]<<<<<]>>>>>";
const TRANSLATION_CLOSE_10: &str = "<<<<<[-]>>>>>[-]>>>>>[-]<<<<<<[>+>>>>>+<<<<<<-]>>>>>>[<<<<<<+>>>>>>-]<<<<<[<<<<<+>>>>>[-]][-]>>>>>[-]<<<<<<<[>>+>>>>>+<<<<<<<-]>>>>>>>[<<<<<<<+>>>>>>>-]<<<<<[<<<<<+>>>>>[-]]<<<<<]>>>>>";
const TRANSLATION_CLOSE_1: &str = "<<<<<[-]>>>>>[-]>>>>>[-]<<<<<<<[>>+>>>>>+<<<<<<<-]>>>>>>>[<<<<<<<+>>>>>>>-]<<<<<[<<<<<+>>>>>[-]]<<<<<]>>>>>";
const TRANSLATION_CLOSE_0: &str = "<<<<<[-]>>>>>[-]>>>>>[-]<<<<<<[>+>>>>>+<<<<<<-]>>>>>>[<<<<<<+>>>>>>-]<<<<<[<<<<<+>>>>>[-]]<<<<<]>>>>>";